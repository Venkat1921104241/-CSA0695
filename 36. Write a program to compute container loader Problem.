#include <stdio.h>
#include <stdlib.h>

#define MAX_CONTAINERS 100
#define MAX_ITEMS 100

typedef struct {
    int size;
    int index;
} Item;

void containerLoader(Item items[], int n, int containerSize) {
    int containers[MAX_CONTAINERS][MAX_ITEMS] = {0};
    int containerCount = 0;

    // Sort items in decreasing order of size
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (items[j].size > items[i].size) {
                Item temp = items[i];
                items[i] = items[j];
                items[j] = temp;
            }
        }
    }

    // Place items into containers using First-Fit Decreasing heuristic
    for (int i = 0; i < n; i++) {
        int j;
        for (j = 0; j < containerCount; j++) {
            int totalSize = 0;
            for (int k = 0; k < MAX_ITEMS; k++) {
                totalSize += containers[j][k];
            }
            if (totalSize + items[i].size <= containerSize) {
                containers[j][items[i].index] = items[i].size;
                break;
            }
        }
        if (j == containerCount) {
            containers[j][items[i].index] = items[i].size;
            containerCount++;
        }
    }

    // Print container contents
    printf("Container Loading Result:\n");
    for (int i = 0; i < containerCount; i++) {
        printf("Container %d: ", i + 1);
        for (int j = 0; j < MAX_ITEMS; j++) {
            if (containers[i][j] > 0) {
                printf("%d ", containers[i][j]);
            }
        }
        printf("\n");
    }
}

int main() {
    int n;
    printf("Enter the number of items: ");
    scanf("%d", &n);

    Item items[MAX_ITEMS];
    printf("Enter the sizes of the items:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &items[i].size);
        items[i].index = i;
    }

    int containerSize;
    printf("Enter the size of the containers: ");
    scanf("%d", &containerSize);

    containerLoader(items, n, containerSize);

    return 0;
}
